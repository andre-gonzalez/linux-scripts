#!/bin/sh

LOG="/tmp/autostart.log"
exec > "$LOG" 2>&1
echo "========== AUTOSTART $(date) =========="

HEADPHONES_MAC="CC:98:8B:C1:5C:78"

# === Environment Setup ===
export DISPLAY=:0
export XDG_RUNTIME_DIR="/run/user/$(id -u)"
export DBUS_SESSION_BUS_ADDRESS="unix:path=$XDG_RUNTIME_DIR/bus"


# === Wait for base programs ===
check_base_programs() {
	echo "[*] Waiting for DWM to initialize..."
	until xwininfo -root -tree 2>/dev/null | grep -q "dwm"; do
		sleep 0.5
	done
	echo "[✓] DWM has started"

	echo "[*] Waiting for dbus-broker..."
	while ! pgrep -u "$USER" dbus-broker >/dev/null 2>&1; do
		sleep 0.5
	done
	echo "[✓] dbus-broker is running"

	echo "[*] Waiting for PipeWire..."
	while ! pgrep -x pipewire >/dev/null; do
		sleep 0.5
	done

	echo "[*] Waiting for pipewire-pulse..."
	while ! pgrep -x pipewire-pulse >/dev/null; do
		sleep 0.5
	done

	echo "[*] Waiting for PipeWire socket..."
	until pactl info >/dev/null 2>&1; do
		sleep 0.5
	done
}

# === Connect Bluetooth headphones ===
connect_headphone() {
	echo "[*] Waiting for bluetoothd..."

	TIMEOUT=15
	while ! systemctl is-active --quiet bluetooth; do
		sleep 1
		TIMEOUT=$((TIMEOUT - 1))
		if [ "$TIMEOUT" -le 0 ]; then
			echo "[!] Timeout waiting for bluetoothd"
			return
		fi
	done

	echo "[*] Powering on Bluetooth, trusting and connecting to $HEADPHONES_MAC"
	bluetoothctl power on
	bluetoothctl trust "$HEADPHONES_MAC"
	bluetoothctl connect "$HEADPHONES_MAC"


	TIMEOUT=30
	while [ $TIMEOUT -gt 0 ]; do
		if bluetoothctl info "$HEADPHONES_MAC" | grep -q "Connected: yes"; then
			echo "[✓] Headphones connected"
			return
		fi
		sleep 1
		TIMEOUT=$((TIMEOUT - 1))
	done

	echo "[!] Failed to connect to headphones"
}

# === Work profile based on time ===
work_hours() {
	day_of_week=$(date +%A)
	hour=$(date +%H)

	echo "[*] Checking if it's a workday and time..."
	for x in Monday Tuesday Wednesday Thursday Friday; do
		if [ "$x" = "$day_of_week" ]; then
			if [ "$hour" -ge 7 ] && [ "$hour" -lt 11 ]; then
				echo "[✓] In working hours"
				connect_headphone
				/home/frank/.scripts/work &
				do_not_autolock
				exit 0
			fi
		fi
	done
	echo "[✓] Not in working hours"
}

# === Ask for profile manually ===
ask() {
	answer="$(echo "work\npessoal" | dmenu -p "$1")"
	echo "[*] Selected profile: $answer"
}

# === Main ===
check_base_programs
work_hours
ask "Starting working now?"

if [ "$answer" = "work" ]; then
	/home/frank/.scripts/work &
elif [ "$answer" = "pessoal" ]; then
	/home/frank/.scripts/pessoal &
else
	echo "[!] No profile selected"
fi

/home/frank/.scripts/kill-xautolock.sh
echo "[✓] Autostart script finished"
